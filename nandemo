{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"nandemo","provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyMV7I71nfIka6dyZrlmJctX"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","metadata":{"id":"7w1K4kskaZ_g"},"source":["# Đề 21 câu 1\n","D = {}\n","#a\n","print(\"Nhap tu dien cua ban. \")\n","yesNo = 'c'\n","L = []\n","while yesNo == 'c':\n","  key = input(\"Nhap key: \")\n","  value = input(\"Nhap value: \")\n","  D[key] = value\n","  L.append(value)\n","  yesNo = input('c/k: ')\n","print(\"Tu dien cua ban: D = \",D)\n","#b\n","# convert string to int list\n","for i in range(0, len(L)):\n","  L[i] = int(L[i])\n","print(\"Sum of L's values: \", sum(L))\n","# print('Value cua tu dien D: ',L)\n","#c sắp xếp và in ra từ điển\n","L.sort(reverse=False)\n","print('Sap xep value cua tu dien: ',L)\n","#d in ra số nguyên tố có trong values đó\n","for i in L:\n","    count=0\n","    if i < 2:\n","      continue\n","    for j in range(2,i//2+1):\n","        if(i%j==0):\n","            count+=1\n","    if(count==0):\n","        print('So nguyen to ',i)\n","#e\n","binary_list = []\n","for i in L:\n","  temp = \"{0:b}\".format(i)\n","  binary_list.append(temp)\n","print('Nhi phan: ', binary_list)\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"uald0NXgbAmR"},"source":["# Đề 21 câu 2\n","import pandas as pd\n","from sklearn.neighbors import KNeighborsClassifier\n","from sklearn import metrics, tree\n","import matplotlib.pyplot as plt\n","import numpy as np\n","from sklearn.model_selection import train_test_split\n","# a\n","a = pd.read_csv(\"glass.csv\")\n","print(a)\n","# b\n","print(a.std())\n","# c\n","X = a.drop(\"Class\", axis=1)\n","Y = a[\"Class\"].values\n","X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.25)\n","model1 = KNeighborsClassifier()\n","model1.fit(X_train, Y_train)\n","result1 = model1.predict(X_test)\n","print(\"score:\", model1.score(X_test, Y_test))\n","print(\"KNN: \")\n","print(result1)\n","print(\"Ma trận tương quan\")\n","print(metrics.confusion_matrix(Y_test, result1))\n","print(metrics.classification_report(Y_test, result1))\n","# d\n","model2 = tree.DecisionTreeClassifier()\n","model2.fit(X_train, Y_train)\n","result2 = model2.predict(X_test)\n","print(\"Score:\", model2.score(X_test, Y_test))\n","print(\"TREE: \")\n","print(result2)\n","print(\"Ma trận tương quan\")\n","print(metrics.confusion_matrix(Y_test, result2))\n","print(metrics.classification_report(Y_test, result2))\n","# e ve bieu do\n","a_sorted = a.sort_values(by = \"Na\")\n","plt.plot(a_sorted[\"Na\"], a_sorted[\"RI\"], color = \"blue\")\n","plt.title(\"BIỂU ĐỒ SO SÁNH SỰ TƯƠNG QUAN \")\n","plt.xlabel(\"Na\")\n","plt.ylabel(\"RI\")\n","plt.show()\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"BGYzOVnObCym"},"source":["# Đề 22 câu 1\n","#a\n","ss = input()\n","s = ss.split()\n","print(s)\n","#b in ra từ có độ dài dài nhất\n","sorted_words = sorted(s,key=len)\n","print(\"Tu dai nhat: \", (sorted_words[-1]))\n","#c tao tu dien\n","D = {}\n","a = len(s)\n","while a>0:\n","  key = s[0]\n","  dem=0\n","  j=0\n","  while j<len(s):\n","    if s[j]==key:\n","      dem=dem+1\n","      s=s[0:j]+s[j+1:]\n","    else:\n","      j=j+1\n","  D[key]=dem\n","  a=len(s)\n","print(D)\n","#d sắp xếp từ điển\n","sorted_values = sorted(D.values())\n","sorted_dict = {}\n","for i in sorted_values:\n","  for k in D.keys():\n","    if D[k] == i:\n","      sorted_dict[k] = D[k]\n","print('Tu dien sap xep: ',sorted_dict)\n","# e\n","sum_ = 0\n","numbers = []\n","for num in ss:\n","    if num.isdigit():\n","        sum_ += int(num)**2\n","        numbers.append(num)\n","print(\"\\nTổng bình phương các số trong chuỗi là:\", sum_)\n","print(\"\\nChuỗi có\", len(numbers), \"ký tự số đó là:\", *numbers)\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"JYSjekvqbGtx"},"source":["# Đề 22 câu 2\n","import pandas as pd\n","from sklearn.cluster import KMeans\n","from sklearn import metrics\n","import matplotlib.pyplot as plt\n","import numpy as np\n","import statistics\n","#a\n","a = pd.read_csv('glass.csv')\n","print(a)\n","df = a.drop('Class',axis=1)\n","# b do lech chuan\n","print(\"Do lech chuan giua cac cot.\")\n","print(df.std())\n","#c \n","columnNames = df.columns.values\n","print(columnNames)\n","L = []\n","# print(statistics.mean(a.RI))\n","for i in columnNames:\n","  x = round(statistics.mean(a[i]),3)\n","  L.append(x)\n","tu = tuple(L)\n","print('Tuple trung binh cong: ',tu)\n","#d kmean\n","x = a.drop('Class',axis=1)\n","y = a['Class'].values\n","model = KMeans(n_clusters=4).fit(x)\n","print(model)\n","kq = model.predict(x)\n","print(kq)\n","print(metrics.confusion_matrix(y,kq))\n","print(\"Model's label:\",model.labels_)\n","print(\"Cum/ cluster: \", model.cluster_centers_)\n","print(\"So lan xac dinh lai tam cum: \",model.n_iter_)\n","#e ve\n","a_sorted = a.sort_values(by = \"Na\")\n","plt.plot(a_sorted[\"Na\"], a_sorted[\"Mg\"], color = \"blue\")\n","plt.title(\"BIỂU ĐỒ SO SÁNH SỰ TƯƠNG QUAN \")\n","plt.xlabel(\"Na\")\n","plt.ylabel(\"Mg\")\n","plt.show()\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"5xLeXvnobI0O"},"source":["# Đề 23 câu 1\n","ss = input()\n","s = ss.split()\n","print(s)\n","\n","L = []\n","#a+b\n","for i in s:\n","  L.append(i)\n","print('L:',L)\n","#c\n","L.sort()\n","print('Sap xep L: ',L)\n","#d\n","longest = max(L,key=len)\n","print('Tu dai nhat: ',longest)\n","#e\n","sum_of_squares = 0\n","nums = []\n","for num in ss:\n","    if num.isdigit():\n","        sum_of_squares += int(num)**2\n","        nums.append(num)\n","print(\"\\nTổng bình phương các số trong chuỗi là:\", sum_of_squares)\n","print(\"\\nChuỗi có\", len(nums), \"ký tự số đó là:\", *nums)\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"1bcItA8tbKqV"},"source":["# Đề 23 câu 2\n","import pandas as pd\n","from sklearn.neighbors import KNeighborsClassifier\n","from sklearn import metrics, tree\n","import matplotlib.pyplot as plt\n","from sklearn.model_selection import train_test_split\n","import numpy as np\n","import sklearn\n","#a\n","a = pd.read_csv(\"Heart.csv\")\n","print(a)\n","#b\n","print(a.std()) # độ lệch chuẩn\n","#c KNN\n","X = a.drop(\"Class\", axis=1)\n","Y = a[\"Class\"].values\n","X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.33, random_state=42)\n","model1 = KNeighborsClassifier()\n","model1.fit(X_train, Y_train)\n","result1 = model1.predict(X_test)\n","print(\"score:\", model1.score(X_test, Y_test))\n","print(\"KNN: \")\n","print(result1)\n","print(\"Ma trận tương quan\")\n","print(metrics.confusion_matrix(Y_test, result1))\n","print(metrics.classification_report(Y_test, result1))\n","# d tree decision\n","model2 = tree.DecisionTreeClassifier()\n","model2.fit(X_train, Y_train)\n","result2 = model2.predict(X_test)\n","print(\"score:\", model2.score(X_test, Y_test))\n","print(\"TREE: \")\n","print(result2)\n","print(\"Ma trận tương quan\")\n","print(metrics.confusion_matrix(Y_test, result2))\n","print(metrics.classification_report(Y_test, result2))\n","# e ve bieu do\n","a_sorted = a.sort_values(by = \"RestBP\")\n","plt.plot(a_sorted[\"RestBP\"], a_sorted[\"Chol\"], color = \"blue\")\n","plt.title(\"BIỂU ĐỒ SO SÁNH SỰ TƯƠNG QUAN \")\n","plt.xlabel(\"RestBP\")\n","plt.ylabel(\"Chol\")\n","plt.show()\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"4z7nujvFbLKJ"},"source":[".# Đề 24 câu 1\n","#a\n","s = input().split(',') # nhập dãy số nhị phân\n","L = []\n","for i in s:\n","  L.append(i)\n","print(\"L:\",L)\n","#b chuyển nhị phân sang thập phân\n","L1 = []\n","for i in L:\n","    c = 0\n","    for j in i:\n","        c = c*2+int(j)\n","    L1.append(c)\n","print(\"L1:\",L1)\n","# c sắp xếp L1\n","print(sorted(L1,reverse=False))\n","# d số nguyên tố trong L1\n","for i in L1:\n","    count=0\n","    for j in range(2,i//2+1):\n","        if(i%j==0):\n","            count+=1\n","    if(count==0):\n","        print('So nguyen to ',i)\n","#e phương sai các số trong L1\n","import statistics\n","print('Phuong sai cac so trong L1: ',statistics.variance(L1))\n"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"F6LFpmbbbOSl"},"source":[""]},{"cell_type":"code","metadata":{"id":"GvYdoSrSbPT4"},"source":["# Đề 24 câu 2\n","import pandas as pd\n","from sklearn.cluster import KMeans\n","from sklearn import metrics\n","import matplotlib.pyplot as plt\n","import numpy as np\n","import statistics\n","#a\n","a = pd.read_csv('Heart.csv')\n","print(a)\n","df = a.drop('Class',axis=1)\n","# b do lech chuan\n","print(\"Do lech chuan giua cac cot.\")\n","print(df.std())\n","#c \n","columnNames = df.columns.values\n","print(columnNames)\n","L = []\n","for i in columnNames:\n","  x = round(statistics.mean(a[i]),3)\n","  L.append(x)\n","tu = tuple(L)\n","print('Tuple trung binh cong: ',tu)\n","# d kmeans\n","x = a.drop('Class',axis=1)\n","y = a['Class'].values\n","model = KMeans(n_clusters=3).fit(x)\n","print(model)\n","kq = model.predict(x)\n","print(kq)\n","print(metrics.confusion_matrix(y,kq))\n","print(\"Model's label:\",model.labels_)\n","print(\"Cum/ cluster: \", model.cluster_centers_)\n","print(\"So lan xac dinh lai tam cum: \",model.n_iter_)\n","#e\n","a_sorted = a.sort_values(by = \"RestBP\")\n","plt.plot(a_sorted[\"RestBP\"], a_sorted[\"Chol\"], color = \"blue\")\n","plt.title(\"BIỂU ĐỒ SO SÁNH SỰ TƯƠNG QUAN \")\n","plt.xlabel(\"RestBP\")\n","plt.ylabel(\"Chol\")\n","plt.show()\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"uvf5uyY0bRMj"},"source":["# Đề 25 câu 1\n","D = {}\n","#a\n","print(\"Nhap tu dien cua ban. \")\n","yesNo = 'c'\n","L = []\n","while yesNo == 'c':\n","  key = input(\"Nhap key: \")\n","  value = input(\"Nhap value: \")\n","  D[key] = value\n","  L.append(value)\n","  yesNo = input('c/k: ')\n","print(\"Tu dien cua ban: D = \",D)\n","#b tổng value in L\n","for i in range(0, len(L)):\n","  L[i] = int(L[i])\n","print(\"Sum of L's values: \", sum(L))\n","#c sắp xếp và in ra từ điển\n","L.sort(reverse=False)\n","print('Sap xep value cua tu dien: ',L)\n","#d in ra số nguyên tố có trong values đó\n","for i in L:\n","    count=0\n","    if i < 2:\n","      continue\n","    for j in range(2,i//2+1):\n","        if(i%j==0):\n","            count+=1\n","    if(count==0):\n","        print('So nguyen to ',i)\n","#e\n","binary_list = []\n","for i in L:\n","  temp = \"{0:b}\".format(i)\n","  binary_list.append(temp)\n","print('Nhi phan: ', binary_list)\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"zZoSDL-UbTYS"},"source":["# Đề 25 câu 2\n","import numpy as np\n","from sklearn import linear_model\n","import matplotlib.pyplot as plt\n","import pandas as pd\n","import io\n","#a\n","df = pd.read_csv('tieu_duong.csv')\n","print(df)\n","# b chuẩn hoá\n","df1 = df.drop('Class', axis = 1)\n","dfNor = df1.apply(lambda a: (a-np.min(a))/(np.max(a)-np.min(a)))\n","print(\"Chuẩn hoá dữ liệu [0,1]\")\n","print(dfNor)\n","#c hoi quy tuyen tinh glucose vs Age\n","x = df.loc[:,['glucose']].values\n","y = df.loc[:,['Age']].values\n","clf = linear_model.LinearRegression()\n","clf.fit(x,y)\n","print('He so hoi quy: ',clf.coef_)\n","print('Sai so hoi quy: ',clf.intercept_)\n","print('Sai so mo hinh: ',clf.score(x,y))\n","print(f\"Phuong trinh hoi quy: [Age]={clf.coef_}*[glucose]+{clf.intercept_}\")\n","plt.plot(x,clf.predict(x))\n","plt.scatter(x,y,c='r')\n","plt.title(\"BIỂU ĐỒ TƯƠNG QUAN GIỮA GLUCOSE VỚI AGE\")\n","plt.xlabel(\"Glucose\")\n","plt.ylabel(\"Age\")\n","plt.show()\n","#test\n","while True:\n","  x1 = float(input(\"Glucose: \"))\n","  if x1<0:\n","    break\n","  print(\"Age: \", x1, \": \",clf.predict([[x1]]))\n","#d hồi quy đa biến\n","x2 = df1.drop('Age',axis=1)\n","y2 = df1['Age'].values\n","x2 = x2.apply(lambda x : (x - np.mean(x)) / (np.max(x)-np.min(x)) )\n","clf2 = linear_model.LinearRegression()\n","clf2.fit(x2,y2)\n","print(clf2.coef_)\n","print(pd.DataFrame({\"Name\":x2, \"Hesohoiquy\":clf2.coef_}).sort_values(by=\"Hesohoiquy\"))\n","print(clf2.intercept_)\n","print(clf2.score(x2,y2))\n","#e vẽ biểu đồ so sánh giữa các thuộc tính đã chuẩn hóa \n","# dfNor.sort_values(by=['Time','glucose','Diastolic','Triceps','Serum','Body','Diabetes'])\n","# column = dfNor.columns.values\n","# # plt.plot(df1['Age'], dfNor[column])\n","# plt.plot(df1['Age'], dfNor.sort_values(by=\"Time\"),label='Time')\n","# # plt.legend(loc=2)\n","# plt.xlabel('Age')\n","# plt.show()\n","for column in dfNor.drop('Age', axis=1):\n","    plt.plot(df1['Age'], dfNor[column], marker='', linewidth=1, alpha=0.9, label=column)\n","plt.legend(loc=2, ncol=2)\n","plt.title(\"Biểu Đồ So Sánh Dữ Liệu Đã Chuẩn Hoá\", loc='left', fontsize=12, fontweight=0, color='orange')\n","plt.xlabel(\"Age\")\n","plt.ylabel(\"Index\")\n","plt.show()\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"iOxMKpQDbU_K"},"source":["# Đề 26 câu 1\n","import numpy as np\n","import matplotlib.pyplot as plt\n","A = np.random.uniform(0,10,10)\t\n","print(A)\n","B = np.random.uniform(0,10,10)\n","print(B)\n","# b euclid giữa 2 dãy số np.\n","dist = np.linalg.norm(A-B)\n","print(dist)\n","# c phương sai các phân tử trong dãy số a\n","import statistics\n","print(\"Phuong sai: \",statistics.variance(A))\n","# d vẽ\n","plt.plot([A[i] for i in range(0,10)], label='Dãy A')\n","plt.plot([B[i] for i in range(0,10)], label='Dãy B')\n","plt.title('Biểu đồ tương quan của A và B')\n","plt.legend(loc='best')\n","plt.xlabel(\"X\")\n","plt.ylabel(\"Y\")\n","plt.show()\n","#e  tìm số chính phương trong 2 list\n","import math\n","LCP = []\n","for i in A:\n","  root = math.sqrt(i)\n","  if int(root)**2 == i:\n","    LCP.append(i)\n","for i in B:\n","  root = math.sqrt(i)\n","  if int(root)**2 == i:\n","    LCP.append(i)\n","tu = set(LCP)\n","print(tu) # tranh trung lap\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"it_2dO7DbVcq","colab":{"resources":{"http://localhost:8080/nbextensions/google.colab/files.js":{"data":"Ly8gQ29weXJpZ2h0IDIwMTcgR29vZ2xlIExMQwovLwovLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgIkxpY2Vuc2UiKTsKLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLgovLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQKLy8KLy8gICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAKLy8KLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZQovLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiAiQVMgSVMiIEJBU0lTLAovLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4KLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZAovLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS4KCi8qKgogKiBAZmlsZW92ZXJ2aWV3IEhlbHBlcnMgZm9yIGdvb2dsZS5jb2xhYiBQeXRob24gbW9kdWxlLgogKi8KKGZ1bmN0aW9uKHNjb3BlKSB7CmZ1bmN0aW9uIHNwYW4odGV4dCwgc3R5bGVBdHRyaWJ1dGVzID0ge30pIHsKICBjb25zdCBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpOwogIGVsZW1lbnQudGV4dENvbnRlbnQgPSB0ZXh0OwogIGZvciAoY29uc3Qga2V5IG9mIE9iamVjdC5rZXlzKHN0eWxlQXR0cmlidXRlcykpIHsKICAgIGVsZW1lbnQuc3R5bGVba2V5XSA9IHN0eWxlQXR0cmlidXRlc1trZXldOwogIH0KICByZXR1cm4gZWxlbWVudDsKfQoKLy8gTWF4IG51bWJlciBvZiBieXRlcyB3aGljaCB3aWxsIGJlIHVwbG9hZGVkIGF0IGEgdGltZS4KY29uc3QgTUFYX1BBWUxPQURfU0laRSA9IDEwMCAqIDEwMjQ7CgpmdW5jdGlvbiBfdXBsb2FkRmlsZXMoaW5wdXRJZCwgb3V0cHV0SWQpIHsKICBjb25zdCBzdGVwcyA9IHVwbG9hZEZpbGVzU3RlcChpbnB1dElkLCBvdXRwdXRJZCk7CiAgY29uc3Qgb3V0cHV0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKG91dHB1dElkKTsKICAvLyBDYWNoZSBzdGVwcyBvbiB0aGUgb3V0cHV0RWxlbWVudCB0byBtYWtlIGl0IGF2YWlsYWJsZSBmb3IgdGhlIG5leHQgY2FsbAogIC8vIHRvIHVwbG9hZEZpbGVzQ29udGludWUgZnJvbSBQeXRob24uCiAgb3V0cHV0RWxlbWVudC5zdGVwcyA9IHN0ZXBzOwoKICByZXR1cm4gX3VwbG9hZEZpbGVzQ29udGludWUob3V0cHV0SWQpOwp9CgovLyBUaGlzIGlzIHJvdWdobHkgYW4gYXN5bmMgZ2VuZXJhdG9yIChub3Qgc3VwcG9ydGVkIGluIHRoZSBicm93c2VyIHlldCksCi8vIHdoZXJlIHRoZXJlIGFyZSBtdWx0aXBsZSBhc3luY2hyb25vdXMgc3RlcHMgYW5kIHRoZSBQeXRob24gc2lkZSBpcyBnb2luZwovLyB0byBwb2xsIGZvciBjb21wbGV0aW9uIG9mIGVhY2ggc3RlcC4KLy8gVGhpcyB1c2VzIGEgUHJvbWlzZSB0byBibG9jayB0aGUgcHl0aG9uIHNpZGUgb24gY29tcGxldGlvbiBvZiBlYWNoIHN0ZXAsCi8vIHRoZW4gcGFzc2VzIHRoZSByZXN1bHQgb2YgdGhlIHByZXZpb3VzIHN0ZXAgYXMgdGhlIGlucHV0IHRvIHRoZSBuZXh0IHN0ZXAuCmZ1bmN0aW9uIF91cGxvYWRGaWxlc0NvbnRpbnVlKG91dHB1dElkKSB7CiAgY29uc3Qgb3V0cHV0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKG91dHB1dElkKTsKICBjb25zdCBzdGVwcyA9IG91dHB1dEVsZW1lbnQuc3RlcHM7CgogIGNvbnN0IG5leHQgPSBzdGVwcy5uZXh0KG91dHB1dEVsZW1lbnQubGFzdFByb21pc2VWYWx1ZSk7CiAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShuZXh0LnZhbHVlLnByb21pc2UpLnRoZW4oKHZhbHVlKSA9PiB7CiAgICAvLyBDYWNoZSB0aGUgbGFzdCBwcm9taXNlIHZhbHVlIHRvIG1ha2UgaXQgYXZhaWxhYmxlIHRvIHRoZSBuZXh0CiAgICAvLyBzdGVwIG9mIHRoZSBnZW5lcmF0b3IuCiAgICBvdXRwdXRFbGVtZW50Lmxhc3RQcm9taXNlVmFsdWUgPSB2YWx1ZTsKICAgIHJldHVybiBuZXh0LnZhbHVlLnJlc3BvbnNlOwogIH0pOwp9CgovKioKICogR2VuZXJhdG9yIGZ1bmN0aW9uIHdoaWNoIGlzIGNhbGxlZCBiZXR3ZWVuIGVhY2ggYXN5bmMgc3RlcCBvZiB0aGUgdXBsb2FkCiAqIHByb2Nlc3MuCiAqIEBwYXJhbSB7c3RyaW5nfSBpbnB1dElkIEVsZW1lbnQgSUQgb2YgdGhlIGlucHV0IGZpbGUgcGlja2VyIGVsZW1lbnQuCiAqIEBwYXJhbSB7c3RyaW5nfSBvdXRwdXRJZCBFbGVtZW50IElEIG9mIHRoZSBvdXRwdXQgZGlzcGxheS4KICogQHJldHVybiB7IUl0ZXJhYmxlPCFPYmplY3Q+fSBJdGVyYWJsZSBvZiBuZXh0IHN0ZXBzLgogKi8KZnVuY3Rpb24qIHVwbG9hZEZpbGVzU3RlcChpbnB1dElkLCBvdXRwdXRJZCkgewogIGNvbnN0IGlucHV0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGlucHV0SWQpOwogIGlucHV0RWxlbWVudC5kaXNhYmxlZCA9IGZhbHNlOwoKICBjb25zdCBvdXRwdXRFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQob3V0cHV0SWQpOwogIG91dHB1dEVsZW1lbnQuaW5uZXJIVE1MID0gJyc7CgogIGNvbnN0IHBpY2tlZFByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gewogICAgaW5wdXRFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIChlKSA9PiB7CiAgICAgIHJlc29sdmUoZS50YXJnZXQuZmlsZXMpOwogICAgfSk7CiAgfSk7CgogIGNvbnN0IGNhbmNlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpOwogIGlucHV0RWxlbWVudC5wYXJlbnRFbGVtZW50LmFwcGVuZENoaWxkKGNhbmNlbCk7CiAgY2FuY2VsLnRleHRDb250ZW50ID0gJ0NhbmNlbCB1cGxvYWQnOwogIGNvbnN0IGNhbmNlbFByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gewogICAgY2FuY2VsLm9uY2xpY2sgPSAoKSA9PiB7CiAgICAgIHJlc29sdmUobnVsbCk7CiAgICB9OwogIH0pOwoKICAvLyBXYWl0IGZvciB0aGUgdXNlciB0byBwaWNrIHRoZSBmaWxlcy4KICBjb25zdCBmaWxlcyA9IHlpZWxkIHsKICAgIHByb21pc2U6IFByb21pc2UucmFjZShbcGlja2VkUHJvbWlzZSwgY2FuY2VsUHJvbWlzZV0pLAogICAgcmVzcG9uc2U6IHsKICAgICAgYWN0aW9uOiAnc3RhcnRpbmcnLAogICAgfQogIH07CgogIGNhbmNlbC5yZW1vdmUoKTsKCiAgLy8gRGlzYWJsZSB0aGUgaW5wdXQgZWxlbWVudCBzaW5jZSBmdXJ0aGVyIHBpY2tzIGFyZSBub3QgYWxsb3dlZC4KICBpbnB1dEVsZW1lbnQuZGlzYWJsZWQgPSB0cnVlOwoKICBpZiAoIWZpbGVzKSB7CiAgICByZXR1cm4gewogICAgICByZXNwb25zZTogewogICAgICAgIGFjdGlvbjogJ2NvbXBsZXRlJywKICAgICAgfQogICAgfTsKICB9CgogIGZvciAoY29uc3QgZmlsZSBvZiBmaWxlcykgewogICAgY29uc3QgbGkgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsaScpOwogICAgbGkuYXBwZW5kKHNwYW4oZmlsZS5uYW1lLCB7Zm9udFdlaWdodDogJ2JvbGQnfSkpOwogICAgbGkuYXBwZW5kKHNwYW4oCiAgICAgICAgYCgke2ZpbGUudHlwZSB8fCAnbi9hJ30pIC0gJHtmaWxlLnNpemV9IGJ5dGVzLCBgICsKICAgICAgICBgbGFzdCBtb2RpZmllZDogJHsKICAgICAgICAgICAgZmlsZS5sYXN0TW9kaWZpZWREYXRlID8gZmlsZS5sYXN0TW9kaWZpZWREYXRlLnRvTG9jYWxlRGF0ZVN0cmluZygpIDoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ24vYSd9IC0gYCkpOwogICAgY29uc3QgcGVyY2VudCA9IHNwYW4oJzAlIGRvbmUnKTsKICAgIGxpLmFwcGVuZENoaWxkKHBlcmNlbnQpOwoKICAgIG91dHB1dEVsZW1lbnQuYXBwZW5kQ2hpbGQobGkpOwoKICAgIGNvbnN0IGZpbGVEYXRhUHJvbWlzZSA9IG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7CiAgICAgIGNvbnN0IHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCk7CiAgICAgIHJlYWRlci5vbmxvYWQgPSAoZSkgPT4gewogICAgICAgIHJlc29sdmUoZS50YXJnZXQucmVzdWx0KTsKICAgICAgfTsKICAgICAgcmVhZGVyLnJlYWRBc0FycmF5QnVmZmVyKGZpbGUpOwogICAgfSk7CiAgICAvLyBXYWl0IGZvciB0aGUgZGF0YSB0byBiZSByZWFkeS4KICAgIGxldCBmaWxlRGF0YSA9IHlpZWxkIHsKICAgICAgcHJvbWlzZTogZmlsZURhdGFQcm9taXNlLAogICAgICByZXNwb25zZTogewogICAgICAgIGFjdGlvbjogJ2NvbnRpbnVlJywKICAgICAgfQogICAgfTsKCiAgICAvLyBVc2UgYSBjaHVua2VkIHNlbmRpbmcgdG8gYXZvaWQgbWVzc2FnZSBzaXplIGxpbWl0cy4gU2VlIGIvNjIxMTU2NjAuCiAgICBsZXQgcG9zaXRpb24gPSAwOwogICAgZG8gewogICAgICBjb25zdCBsZW5ndGggPSBNYXRoLm1pbihmaWxlRGF0YS5ieXRlTGVuZ3RoIC0gcG9zaXRpb24sIE1BWF9QQVlMT0FEX1NJWkUpOwogICAgICBjb25zdCBjaHVuayA9IG5ldyBVaW50OEFycmF5KGZpbGVEYXRhLCBwb3NpdGlvbiwgbGVuZ3RoKTsKICAgICAgcG9zaXRpb24gKz0gbGVuZ3RoOwoKICAgICAgY29uc3QgYmFzZTY0ID0gYnRvYShTdHJpbmcuZnJvbUNoYXJDb2RlLmFwcGx5KG51bGwsIGNodW5rKSk7CiAgICAgIHlpZWxkIHsKICAgICAgICByZXNwb25zZTogewogICAgICAgICAgYWN0aW9uOiAnYXBwZW5kJywKICAgICAgICAgIGZpbGU6IGZpbGUubmFtZSwKICAgICAgICAgIGRhdGE6IGJhc2U2NCwKICAgICAgICB9LAogICAgICB9OwoKICAgICAgbGV0IHBlcmNlbnREb25lID0gZmlsZURhdGEuYnl0ZUxlbmd0aCA9PT0gMCA/CiAgICAgICAgICAxMDAgOgogICAgICAgICAgTWF0aC5yb3VuZCgocG9zaXRpb24gLyBmaWxlRGF0YS5ieXRlTGVuZ3RoKSAqIDEwMCk7CiAgICAgIHBlcmNlbnQudGV4dENvbnRlbnQgPSBgJHtwZXJjZW50RG9uZX0lIGRvbmVgOwoKICAgIH0gd2hpbGUgKHBvc2l0aW9uIDwgZmlsZURhdGEuYnl0ZUxlbmd0aCk7CiAgfQoKICAvLyBBbGwgZG9uZS4KICB5aWVsZCB7CiAgICByZXNwb25zZTogewogICAgICBhY3Rpb246ICdjb21wbGV0ZScsCiAgICB9CiAgfTsKfQoKc2NvcGUuZ29vZ2xlID0gc2NvcGUuZ29vZ2xlIHx8IHt9OwpzY29wZS5nb29nbGUuY29sYWIgPSBzY29wZS5nb29nbGUuY29sYWIgfHwge307CnNjb3BlLmdvb2dsZS5jb2xhYi5fZmlsZXMgPSB7CiAgX3VwbG9hZEZpbGVzLAogIF91cGxvYWRGaWxlc0NvbnRpbnVlLAp9Owp9KShzZWxmKTsK","ok":true,"headers":[["content-type","application/javascript"]],"status":200,"status_text":""}},"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"status":"ok","timestamp":1627368925233,"user_tz":-420,"elapsed":17768,"user":{"displayName":"Vân Trần Thảo","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgC02mFRcciy_nHPrkLg2bQYNVPMivJ7vt68iWV=s64","userId":"05921205066487747524"}},"outputId":"c73ffc87-3b0e-4bb4-ea06-85dc8f3ee6cc"},"source":["# Đề 26 câu 2\n","from google.colab import files\n","upload = files.upload()\n","import pandas as pd\n","from sklearn.neighbors import KNeighborsClassifier\n","from sklearn import metrics, tree\n","import matplotlib.pyplot as plt\n","import numpy as np\n","from sklearn.model_selection import train_test_split\n","import sklearn\n","#a\n","a = pd.read_csv('winequality-red-fix.csv',sep=';')\n","# print(a)\n","df = a.drop('quality',axis=1)\n","print(df)\n","#b chuẩn hoá\n","dfNor = df.apply(lambda a: (a-np.min(a))/(np.max(a)-np.min(a)))\n","print(dfNor)\n","#c KNN\n","X = a.drop(\"quality\", axis=1)\n","Y = a[\"quality\"].values\n","X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.3)\n","model1 = KNeighborsClassifier()\n","model1.fit(X_train, Y_train)\n","result1 = model1.predict(X_test)\n","print(\"score:\", model1.score(X_test, Y_test))\n","print(\"KNN: \")\n","print(result1)\n","print(\"Ma trận tương quan\")\n","print(metrics.confusion_matrix(Y_test, result1))\n","print(metrics.classification_report(Y_test, result1))\n","# d\n","model2 = tree.DecisionTreeClassifier()\n","model2.fit(X_train, Y_train)\n","result2 = model2.predict(X_test)\n","print(\"Score:\", model2.score(X_test, Y_test))\n","print(\"TREE: \")\n","print(result2)\n","print(\"Ma trận tương quan\")\n","print(metrics.confusion_matrix(Y_test, result2))\n","print(metrics.classification_report(Y_test, result2))\n","# e Vẽ biểu đồ so sánh giữa các thuộc tính đã chuẩn hóa ?\n","for column in dfNor.drop('alcohol', axis=1):\n","    plt.plot(df['alcohol'], dfNor[column], marker='', linewidth=1, alpha=0.9, label=column)\n","plt.legend(loc=2, ncol=2)\n","plt.title(\"BIỂU ĐỒ SO SÁNH\", loc='left', fontsize=12, fontweight=0, color='orange')\n","plt.xlabel(\"Alcohol\")\n","plt.ylabel(\"Index\")\n","plt.show()\n"],"execution_count":1,"outputs":[{"output_type":"display_data","data":{"text/html":["\n","     <input type=\"file\" id=\"files-74f77d9e-653b-4351-876b-f48b5ee3bb78\" name=\"files[]\" multiple disabled\n","        style=\"border:none\" />\n","     <output id=\"result-74f77d9e-653b-4351-876b-f48b5ee3bb78\">\n","      Upload widget is only available when the cell has been executed in the\n","      current browser session. Please rerun this cell to enable.\n","      </output>\n","      <script src=\"/nbextensions/google.colab/files.js\"></script> "],"text/plain":["<IPython.core.display.HTML object>"]},"metadata":{"tags":[]}},{"output_type":"stream","text":["Saving winequality-red-fix.csv to winequality-red-fix.csv\n","      fixed acidity  volatile acidity  citric acid  ...    pH  sulphates  alcohol\n","0               7.4             0.700         0.00  ...  3.51       0.56      9.4\n","1               7.8             0.880         0.00  ...  3.20       0.68      9.8\n","2               7.8             0.760         0.04  ...  3.26       0.65      9.8\n","3              11.2             0.280         0.56  ...  3.16       0.58      9.8\n","4               7.4             0.700         0.00  ...  3.51       0.56      9.4\n","...             ...               ...          ...  ...   ...        ...      ...\n","1594            6.2             0.600         0.08  ...  3.45       0.58     10.5\n","1595            5.9             0.550         0.10  ...  3.52       0.76     11.2\n","1596            6.3             0.510         0.13  ...  3.42       0.75     11.0\n","1597            5.9             0.645         0.12  ...  3.57       0.71     10.2\n","1598            6.0             0.310         0.47  ...  3.39       0.66     11.0\n","\n","[1599 rows x 11 columns]\n","      fixed acidity  volatile acidity  ...  sulphates   alcohol\n","0          0.247788          0.397260  ...   0.137725  0.153846\n","1          0.283186          0.520548  ...   0.209581  0.215385\n","2          0.283186          0.438356  ...   0.191617  0.215385\n","3          0.584071          0.109589  ...   0.149701  0.215385\n","4          0.247788          0.397260  ...   0.137725  0.153846\n","...             ...               ...  ...        ...       ...\n","1594       0.141593          0.328767  ...   0.149701  0.323077\n","1595       0.115044          0.294521  ...   0.257485  0.430769\n","1596       0.150442          0.267123  ...   0.251497  0.400000\n","1597       0.115044          0.359589  ...   0.227545  0.276923\n","1598       0.123894          0.130137  ...   0.197605  0.400000\n","\n","[1599 rows x 11 columns]\n","score: 0.5020833333333333\n","KNN: \n","[5 6 6 5 6 6 6 5 5 5 7 5 5 7 6 6 6 5 6 6 6 5 6 5 5 5 5 5 5 5 6 5 7 7 6 6 5\n"," 5 6 5 5 5 6 5 6 5 5 5 5 5 6 5 5 6 5 6 6 5 7 5 5 6 5 6 5 6 5 5 6 5 5 5 6 6\n"," 7 5 5 5 5 5 5 7 6 5 4 5 6 6 7 5 5 6 5 5 5 5 6 6 5 6 5 5 5 5 6 6 5 5 6 6 7\n"," 5 5 5 5 5 6 5 5 5 5 5 5 5 5 7 5 6 6 6 5 5 5 5 6 6 6 5 6 5 5 5 5 4 6 5 6 7\n"," 4 5 6 6 7 6 5 5 5 5 5 5 7 5 6 6 7 6 6 6 5 5 5 7 5 5 5 5 7 6 6 6 5 5 5 6 5\n"," 6 5 6 6 5 6 5 6 6 6 5 5 6 5 5 6 6 5 5 6 6 6 6 7 5 5 6 6 5 6 5 5 6 5 5 6 5\n"," 6 5 5 5 5 5 6 6 5 5 6 5 6 6 6 6 6 5 5 7 6 5 7 6 5 5 6 6 5 5 6 6 5 5 5 5 6\n"," 6 6 5 7 5 6 5 5 5 5 5 5 5 7 6 6 5 7 5 5 5 6 6 5 5 6 5 6 7 5 5 7 5 5 5 6 6\n"," 6 5 6 5 5 5 5 6 6 6 5 6 5 5 5 5 6 7 5 6 5 5 6 7 7 5 5 5 6 5 5 5 5 6 6 5 6\n"," 6 5 6 5 5 5 5 5 6 6 6 7 6 7 5 6 7 5 5 7 5 5 5 5 7 6 5 5 5 5 5 5 5 5 6 5 6\n"," 6 6 5 5 5 7 5 6 6 6 6 6 5 5 5 6 6 5 6 5 5 5 5 5 5 6 5 4 6 6 6 5 5 5 6 5 5\n"," 6 6 5 6 5 6 5 5 4 6 5 5 6 5 5 5 6 5 5 5 6 5 6 5 5 7 5 6 5 6 5 5 5 5 5 6 6\n"," 6 5 5 6 5 5 5 5 5 5 7 5 5 5 5 5 6 5 5 5 4 6 7 5 5 5 6 6 6 5 5 6 5 6 5 5]\n","Ma trận tương quan\n","[[  0   0   1   2   0   0]\n"," [  0   0  10   4   1   0]\n"," [  0   4 146  43   6   0]\n"," [  0   1  96  84  17   0]\n"," [  0   1  16  29  11   0]\n"," [  0   0   2   5   1   0]]\n","              precision    recall  f1-score   support\n","\n","           3       0.00      0.00      0.00         3\n","           4       0.00      0.00      0.00        15\n","           5       0.54      0.73      0.62       199\n","           6       0.50      0.42      0.46       198\n","           7       0.31      0.19      0.24        57\n","           8       0.00      0.00      0.00         8\n","\n","    accuracy                           0.50       480\n","   macro avg       0.22      0.23      0.22       480\n","weighted avg       0.47      0.50      0.48       480\n","\n","Score: 0.60625\n","TREE: \n","[6 5 6 5 5 6 7 6 5 6 5 5 6 7 5 5 7 5 7 6 6 5 6 5 6 6 5 6 5 4 6 5 7 6 6 7 5\n"," 5 6 5 6 7 7 5 6 6 7 6 6 5 5 5 6 6 6 6 7 5 6 6 6 5 6 5 6 5 6 7 7 5 5 5 5 5\n"," 7 5 6 7 5 5 5 5 5 5 6 5 5 6 7 5 5 5 5 5 6 5 4 6 6 6 5 5 6 5 7 6 7 5 6 7 6\n"," 5 6 5 5 6 6 5 5 6 5 5 5 5 5 6 7 6 5 5 6 6 6 6 6 6 6 5 5 6 5 5 5 6 5 6 7 4\n"," 5 5 6 5 6 6 5 5 6 6 6 6 7 7 6 7 6 5 5 6 6 6 5 6 5 4 6 5 7 5 5 6 6 5 6 6 4\n"," 4 5 4 5 5 6 5 7 6 5 5 6 5 6 6 7 7 5 6 6 6 5 5 5 4 5 6 6 4 6 5 6 5 6 6 6 5\n"," 5 6 6 6 5 7 6 6 6 5 6 6 5 6 6 7 5 4 6 5 6 7 3 7 5 6 6 6 5 6 6 6 5 5 6 4 6\n"," 5 4 6 6 5 6 7 5 5 6 6 5 5 6 5 6 6 6 5 5 6 6 6 5 5 5 5 5 7 6 5 7 6 6 5 6 5\n"," 6 7 6 6 6 6 5 5 4 5 5 4 5 5 5 5 6 7 5 6 6 5 6 7 5 6 5 5 6 6 5 5 4 5 6 6 5\n"," 6 5 5 5 5 5 5 6 6 6 7 6 6 5 6 5 7 7 6 6 5 7 5 5 7 7 5 6 4 5 5 5 6 6 5 6 6\n"," 7 6 5 5 6 7 6 6 4 3 6 5 6 6 6 6 6 6 5 7 6 5 5 5 6 6 5 5 5 6 6 5 6 5 6 5 6\n"," 6 6 5 6 6 6 6 5 7 5 5 5 6 5 5 5 6 5 6 7 7 5 6 7 6 6 5 6 6 5 6 6 6 6 4 6 6\n"," 6 6 5 5 7 6 6 5 5 6 6 5 6 6 7 5 7 5 6 5 5 5 7 5 6 5 6 5 6 4 3 7 6 6 5 6]\n","Ma trận tương quan\n","[[  0   1   1   1   0   0]\n"," [  1   2   5   6   1   0]\n"," [  0  10 135  50   4   0]\n"," [  2   6  47 126  17   0]\n"," [  0   0   6  23  28   0]\n"," [  0   0   0   3   5   0]]\n","              precision    recall  f1-score   support\n","\n","           3       0.00      0.00      0.00         3\n","           4       0.11      0.13      0.12        15\n","           5       0.70      0.68      0.69       199\n","           6       0.60      0.64      0.62       198\n","           7       0.51      0.49      0.50        57\n","           8       0.00      0.00      0.00         8\n","\n","    accuracy                           0.61       480\n","   macro avg       0.32      0.32      0.32       480\n","weighted avg       0.60      0.61      0.60       480\n","\n"],"name":"stdout"},{"output_type":"stream","text":["/usr/local/lib/python3.7/dist-packages/sklearn/metrics/_classification.py:1272: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.7/dist-packages/sklearn/metrics/_classification.py:1272: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"],"name":"stderr"},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"pkE7w63-bZIh"},"source":["# Đề 27 câu 1\n","n = int(input('n = '))\n","L = []\n","L1 = []\n","# a L1 là bình phương\n","for i in range(0,n):\n","  L1.append(i*i)\n","print(\"L1 (binh phuong cac so 0-n)=\",L1)\n","n1, n2 = 0, 1\n","count = 0\n","if n <= 0:\n","   print(\"Hay nhap n > 0\")\n","elif n == 1:\n","   print(\"Day fibo chay den: \",n,\":\")\n","   print(n1)\n","else:\n","   while count < n:\n","       L.append(n1)\n","       nth = n1 + n2\n","       n1 = n2\n","       n2 = nth\n","       count += 1\n","print(\"L(Fibo sequence)=\",L)\n","# b euclid distance L vs L1\n","import numpy as np\n","a = np.array(L)\n","b = np.array(L1)\n","dist = np.linalg.norm(a-b)\n","print('Euclid distance: ',dist)\n","# c tu dien D\n","zip_iterator = zip(L,L1)\n","D = {}\n","D = dict(zip_iterator)\n","print('Tu dien D: ',D)\n","# d số nguyên tố trong L\n","for i in L:\n","    count=0\n","    if i == 0:\n","      continue\n","    for j in range(2,i//2+1):\n","        if(i%j==0):\n","            count+=1\n","    if(count==0):\n","        print('So nguyen to ',i)\n","#d convert int - binary\n","binary_list = []\n","for i in L:\n","  binary_list.append(format(10,'b'))\n","print('So nhi phan L: ', binary_list)\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"AtXHLlwbbZlB"},"source":["# Đề 27 câu 2\n","import numpy as np\n","from sklearn import linear_model\n","import matplotlib.pyplot as plt\n","import pandas as pd\n","import io\n","#a\n","a = pd.read_csv('winequality-red-fix.csv',sep=';')\n","print(a)\n","#b\n","df = a.drop('quality',axis=1)\n","dfNor = df.apply(lambda a: (a-np.min(a))/(np.max(a)-np.min(a)))\n","print(dfNor)\n","# c citric acid vs quality\n","x = a.loc[:,['citric acid']].values\n","y = a.loc[:,['quality']].values\n","clf = linear_model.LinearRegression()\n","clf.fit(x,y)\n","print(\"he so hoi quy\", clf.coef_)\n","print(\"sai so hoi quy\", clf.intercept_)\n","print(\"sai so mo hinh\", clf.score(x,y))\n","print(f\"Phương trình hồi quy: [quality]={clf.coef_}*[citric acid]+{clf.intercept_}\")\n","plt.plot(x, clf.predict(x))\n","plt.scatter(x,y,c='r')\n","plt.title(\"BIỂU ĐỒ TƯƠNG QUAN GIỮA CITRIC ACID VỚI QUALITY\")\n","plt.xlabel(\"Citric acid\")\n","plt.ylabel(\"Quality\")\n","plt.show()\n","#test\n","while True:\n","  x1 = float(input(\"citric acid]: \"))\n","  if x1 < 0:\n","    break\n","  print('quality: ', x1, \":\", clf.predict([[x1]]))\n","# d ..11..vs quality\n","x2 = dfNor\n","y2 = a['quality'].values\n","clf2 = linear_model.LinearRegression()\n","clf2.fit(x2,y2)\n","dt = {\n","    \"Name\" : x2,\n","    \"He so hoi quy\" : clf2.coef_\n","}\n","print(\"he so hoi quy:\")\n","print(pd.DataFrame(dt).sort_values(by=\"He so hoi quy\") )\n","print(\"sai so hoi quy\", clf2.intercept_)\n","print(\"sai so mo hinh\", clf2.score(x2,y2))\n","# e Vẽ biểu đồ so sánh giữa các thuộc tính đã chuẩn hóa ???\n","for column in dfNor.drop('alcohol', axis=1):\n","    plt.plot(df['alcohol'], dfNor[column], marker='', linewidth=1, alpha=0.9, label=column)\n","plt.legend(loc=2, ncol=2)\n","plt.title(\"BIỂU ĐỒ SO SÁNH\", loc='left', fontsize=12, fontweight=0, color='orange')\n","plt.xlabel(\"alcohol\")\n","plt.ylabel(\"Index\")\n","plt.show()\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"FNO05jAIbbqo"},"source":["# Đề 28 câu 1\n","#a+b\n","L = []\n","with open('K61.txt') as f:\n","    for line in f:\n","        L.append(line)\n","newL = []\n","for i in L:\n","  newL.append(i.strip())\n","print('File K61.txt: ',newL)\n","#c in ra dòng có nhiều ký tự nhất\n","max = 0\n","for i in range(0, len(newL)):\n","    if len(newL[i]) > max:\n","        max = len(newL[i])\n","\n","for i in range(0, len(newL)):\n","    if len(newL[i]) == max:\n","        print('Dong co nhieu ky tu nhat : ',newL[i])\n","#d tạo từ điển\n","D = {}\n","for i in range(len(newL)):\n","  D[i] = len(newL[i])\n","print('Tu dien D: ',D)\n","# e line có chứa 'a'\n","a_include = []\n","for i in range(len(newL)):\n","  if 'a' in newL[i]:\n","    a_include.append(i)\n","print(\"Thu tu dong co chua it nhat 'a': \",a_include)\n"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"DT-RQMMDbe2q"},"source":[""]},{"cell_type":"code","metadata":{"id":"0hNoajYWbdkd"},"source":["# Đề 28 câu 2\n","import pandas as pd\n","from sklearn.neighbors import KNeighborsClassifier\n","from sklearn import metrics, tree\n","import matplotlib.pyplot as plt\n","from sklearn.model_selection import train_test_split\n","import numpy as np\n","import sklearn\n","#a\n","a = pd.read_csv('Iris.csv')\n","print(a)\n","df = a.drop('class',axis=1)\n","print(df)\n","#b\n","dfNor = df.apply(lambda a: (a-np.min(a))/(np.max(a)-np.min(a)))\n","print(dfNor)\n","# c KNN\n","X = a.drop(\"class\", axis=1)\n","Y = a[\"class\"].values\n","X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.33)\n","model1 = KNeighborsClassifier()\n","model1.fit(X_train, Y_train)\n","result1 = model1.predict(X_test)\n","print(\"score:\", model1.score(X_test, Y_test))\n","print(\"KNN: \")\n","print(result1)\n","print(\"Ma trận tương quan\")\n","print(metrics.confusion_matrix(Y_test, result1))\n","print(metrics.classification_report(Y_test, result1))\n","# d\n","model2 = tree.DecisionTreeClassifier()\n","model2.fit(X_train, Y_train)\n","result2 = model2.predict(X_test)\n","print(\"Score:\", model2.score(X_test, Y_test))\n","print(\"TREE: \")\n","print(result2)\n","print(\"Ma trận tương quan\")\n","print(metrics.confusion_matrix(Y_test, result2))\n","print(metrics.classification_report(Y_test, result2))\n","#e ??? not sure\n","# mean of 4 columns---bar\n","# meanListChart = []\n","# dfNameColumn = df.columns.values\n","# for i in dfNameColumn:\n","#   meanListChart.append(df[i].mean())\n","# print(dfNameColumn)\n","# print(meanListChart)\n","# # so sanh gia tri giua cac nhom khac nhau! (mean)\n","# plt.bar(dfNameColumn, meanListChart)\n","# plt.plot(dfNameColumn, meanListChart, marker='o', markersize=10, linestyle='-.')\n","# plt.show()------------bar\n","df.plot.line(title=\"Biểu Đồ So Sánh\")\n","plt.show(block=True)\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"2kuBE_Z_bgXb"},"source":["# Đề 29 câu 1\n","import pandas as pd\n","import numpy as np\n","from sklearn import linear_model\n","import matplotlib.pyplot as plt\n","#a+b\n","df = pd.read_csv('DB.csv')\n","df_drop = df.drop('Socum',axis=1)\n","print(df)\n","#c\n","x = df[\"Socum\"].values\n","print(x)\n","y = df[\"Kmean\"].values\n","z = df[\"FCM\"].values\n","e = df[\"SSFCM\"].values\n","plt.plot(x,y)\n","plt.plot(x,z)\n","plt.plot(x,e)\n","plt.xlabel(\"Số cụm\")\n","plt.title(\"biểu đồ đường so sánh sự tương quan của giá trị độ đo DB theo số cụm giữa 3 phương pháp Kmean, FCM, SSFCM\")\n","plt.legend(['Kmean', 'FCM', 'SSFCM'])\n","plt.show()\n","#d xuat\n","plt.savefig(\"onthi.png\")\n","# e max\n","print('Gia tri lon nhat do do DB theo tung so cum.')\n","maxClus = df_drop.max(axis=1)\n","print(maxClus)\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"ONZZRwgibiJr"},"source":["# Đề 29 câu 2\n","import pandas as pd\n","from sklearn.cluster import KMeans\n","from sklearn import metrics\n","import matplotlib.pyplot as plt\n","import numpy as np\n","import statistics\n","#a\n","a = pd.read_csv('Iris.csv')\n","y = a['class'].values\n","print(a)\n","df = a.drop('class',axis=1)\n","#b\n","L = []\n","column_name = df.columns.values \n","for i in column_name:\n","  a = np.power(df[i].values,2)\n","  L.append(round(sum(a),4))\n","print('Tong binh phuong cua gia tri cac thuoc tinh: ',L)\n","#c\n","LTuple = []\n","for i in column_name:\n","  x = round(statistics.mean(df[i]),3)\n","  LTuple.append(x)\n","tu = tuple(LTuple)\n","print('Tuple trung binh cong: ',tu)\n","#d vẽ\n","newDfDrawing = df.drop(['petallength', 'petalwidth'],axis=1)\n","newDfDrawing.plot.line(title=\"Biểu Đồ Tương Quan\")\n","plt.show(block=True)\n","# e kmean\n","x = df\n","model = KMeans(n_clusters=5).fit(x)\n","print(model)\n","kq = model.predict(x)\n","print(kq)\n","print(metrics.confusion_matrix(y,kq))\n","print(\"Model's label:\",model.labels_)\n","print(\"Cum/ cluster: \", model.cluster_centers_)\n","print(\"So lan xac dinh lai tam cum: \",model.n_iter_)\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"qHY6bjmEbj8h","colab":{"resources":{"http://localhost:8080/nbextensions/google.colab/files.js":{"data":"Ly8gQ29weXJpZ2h0IDIwMTcgR29vZ2xlIExMQwovLwovLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgIkxpY2Vuc2UiKTsKLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLgovLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQKLy8KLy8gICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAKLy8KLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZQovLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiAiQVMgSVMiIEJBU0lTLAovLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4KLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZAovLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS4KCi8qKgogKiBAZmlsZW92ZXJ2aWV3IEhlbHBlcnMgZm9yIGdvb2dsZS5jb2xhYiBQeXRob24gbW9kdWxlLgogKi8KKGZ1bmN0aW9uKHNjb3BlKSB7CmZ1bmN0aW9uIHNwYW4odGV4dCwgc3R5bGVBdHRyaWJ1dGVzID0ge30pIHsKICBjb25zdCBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpOwogIGVsZW1lbnQudGV4dENvbnRlbnQgPSB0ZXh0OwogIGZvciAoY29uc3Qga2V5IG9mIE9iamVjdC5rZXlzKHN0eWxlQXR0cmlidXRlcykpIHsKICAgIGVsZW1lbnQuc3R5bGVba2V5XSA9IHN0eWxlQXR0cmlidXRlc1trZXldOwogIH0KICByZXR1cm4gZWxlbWVudDsKfQoKLy8gTWF4IG51bWJlciBvZiBieXRlcyB3aGljaCB3aWxsIGJlIHVwbG9hZGVkIGF0IGEgdGltZS4KY29uc3QgTUFYX1BBWUxPQURfU0laRSA9IDEwMCAqIDEwMjQ7CgpmdW5jdGlvbiBfdXBsb2FkRmlsZXMoaW5wdXRJZCwgb3V0cHV0SWQpIHsKICBjb25zdCBzdGVwcyA9IHVwbG9hZEZpbGVzU3RlcChpbnB1dElkLCBvdXRwdXRJZCk7CiAgY29uc3Qgb3V0cHV0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKG91dHB1dElkKTsKICAvLyBDYWNoZSBzdGVwcyBvbiB0aGUgb3V0cHV0RWxlbWVudCB0byBtYWtlIGl0IGF2YWlsYWJsZSBmb3IgdGhlIG5leHQgY2FsbAogIC8vIHRvIHVwbG9hZEZpbGVzQ29udGludWUgZnJvbSBQeXRob24uCiAgb3V0cHV0RWxlbWVudC5zdGVwcyA9IHN0ZXBzOwoKICByZXR1cm4gX3VwbG9hZEZpbGVzQ29udGludWUob3V0cHV0SWQpOwp9CgovLyBUaGlzIGlzIHJvdWdobHkgYW4gYXN5bmMgZ2VuZXJhdG9yIChub3Qgc3VwcG9ydGVkIGluIHRoZSBicm93c2VyIHlldCksCi8vIHdoZXJlIHRoZXJlIGFyZSBtdWx0aXBsZSBhc3luY2hyb25vdXMgc3RlcHMgYW5kIHRoZSBQeXRob24gc2lkZSBpcyBnb2luZwovLyB0byBwb2xsIGZvciBjb21wbGV0aW9uIG9mIGVhY2ggc3RlcC4KLy8gVGhpcyB1c2VzIGEgUHJvbWlzZSB0byBibG9jayB0aGUgcHl0aG9uIHNpZGUgb24gY29tcGxldGlvbiBvZiBlYWNoIHN0ZXAsCi8vIHRoZW4gcGFzc2VzIHRoZSByZXN1bHQgb2YgdGhlIHByZXZpb3VzIHN0ZXAgYXMgdGhlIGlucHV0IHRvIHRoZSBuZXh0IHN0ZXAuCmZ1bmN0aW9uIF91cGxvYWRGaWxlc0NvbnRpbnVlKG91dHB1dElkKSB7CiAgY29uc3Qgb3V0cHV0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKG91dHB1dElkKTsKICBjb25zdCBzdGVwcyA9IG91dHB1dEVsZW1lbnQuc3RlcHM7CgogIGNvbnN0IG5leHQgPSBzdGVwcy5uZXh0KG91dHB1dEVsZW1lbnQubGFzdFByb21pc2VWYWx1ZSk7CiAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShuZXh0LnZhbHVlLnByb21pc2UpLnRoZW4oKHZhbHVlKSA9PiB7CiAgICAvLyBDYWNoZSB0aGUgbGFzdCBwcm9taXNlIHZhbHVlIHRvIG1ha2UgaXQgYXZhaWxhYmxlIHRvIHRoZSBuZXh0CiAgICAvLyBzdGVwIG9mIHRoZSBnZW5lcmF0b3IuCiAgICBvdXRwdXRFbGVtZW50Lmxhc3RQcm9taXNlVmFsdWUgPSB2YWx1ZTsKICAgIHJldHVybiBuZXh0LnZhbHVlLnJlc3BvbnNlOwogIH0pOwp9CgovKioKICogR2VuZXJhdG9yIGZ1bmN0aW9uIHdoaWNoIGlzIGNhbGxlZCBiZXR3ZWVuIGVhY2ggYXN5bmMgc3RlcCBvZiB0aGUgdXBsb2FkCiAqIHByb2Nlc3MuCiAqIEBwYXJhbSB7c3RyaW5nfSBpbnB1dElkIEVsZW1lbnQgSUQgb2YgdGhlIGlucHV0IGZpbGUgcGlja2VyIGVsZW1lbnQuCiAqIEBwYXJhbSB7c3RyaW5nfSBvdXRwdXRJZCBFbGVtZW50IElEIG9mIHRoZSBvdXRwdXQgZGlzcGxheS4KICogQHJldHVybiB7IUl0ZXJhYmxlPCFPYmplY3Q+fSBJdGVyYWJsZSBvZiBuZXh0IHN0ZXBzLgogKi8KZnVuY3Rpb24qIHVwbG9hZEZpbGVzU3RlcChpbnB1dElkLCBvdXRwdXRJZCkgewogIGNvbnN0IGlucHV0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGlucHV0SWQpOwogIGlucHV0RWxlbWVudC5kaXNhYmxlZCA9IGZhbHNlOwoKICBjb25zdCBvdXRwdXRFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQob3V0cHV0SWQpOwogIG91dHB1dEVsZW1lbnQuaW5uZXJIVE1MID0gJyc7CgogIGNvbnN0IHBpY2tlZFByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gewogICAgaW5wdXRFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIChlKSA9PiB7CiAgICAgIHJlc29sdmUoZS50YXJnZXQuZmlsZXMpOwogICAgfSk7CiAgfSk7CgogIGNvbnN0IGNhbmNlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpOwogIGlucHV0RWxlbWVudC5wYXJlbnRFbGVtZW50LmFwcGVuZENoaWxkKGNhbmNlbCk7CiAgY2FuY2VsLnRleHRDb250ZW50ID0gJ0NhbmNlbCB1cGxvYWQnOwogIGNvbnN0IGNhbmNlbFByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gewogICAgY2FuY2VsLm9uY2xpY2sgPSAoKSA9PiB7CiAgICAgIHJlc29sdmUobnVsbCk7CiAgICB9OwogIH0pOwoKICAvLyBXYWl0IGZvciB0aGUgdXNlciB0byBwaWNrIHRoZSBmaWxlcy4KICBjb25zdCBmaWxlcyA9IHlpZWxkIHsKICAgIHByb21pc2U6IFByb21pc2UucmFjZShbcGlja2VkUHJvbWlzZSwgY2FuY2VsUHJvbWlzZV0pLAogICAgcmVzcG9uc2U6IHsKICAgICAgYWN0aW9uOiAnc3RhcnRpbmcnLAogICAgfQogIH07CgogIGNhbmNlbC5yZW1vdmUoKTsKCiAgLy8gRGlzYWJsZSB0aGUgaW5wdXQgZWxlbWVudCBzaW5jZSBmdXJ0aGVyIHBpY2tzIGFyZSBub3QgYWxsb3dlZC4KICBpbnB1dEVsZW1lbnQuZGlzYWJsZWQgPSB0cnVlOwoKICBpZiAoIWZpbGVzKSB7CiAgICByZXR1cm4gewogICAgICByZXNwb25zZTogewogICAgICAgIGFjdGlvbjogJ2NvbXBsZXRlJywKICAgICAgfQogICAgfTsKICB9CgogIGZvciAoY29uc3QgZmlsZSBvZiBmaWxlcykgewogICAgY29uc3QgbGkgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsaScpOwogICAgbGkuYXBwZW5kKHNwYW4oZmlsZS5uYW1lLCB7Zm9udFdlaWdodDogJ2JvbGQnfSkpOwogICAgbGkuYXBwZW5kKHNwYW4oCiAgICAgICAgYCgke2ZpbGUudHlwZSB8fCAnbi9hJ30pIC0gJHtmaWxlLnNpemV9IGJ5dGVzLCBgICsKICAgICAgICBgbGFzdCBtb2RpZmllZDogJHsKICAgICAgICAgICAgZmlsZS5sYXN0TW9kaWZpZWREYXRlID8gZmlsZS5sYXN0TW9kaWZpZWREYXRlLnRvTG9jYWxlRGF0ZVN0cmluZygpIDoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ24vYSd9IC0gYCkpOwogICAgY29uc3QgcGVyY2VudCA9IHNwYW4oJzAlIGRvbmUnKTsKICAgIGxpLmFwcGVuZENoaWxkKHBlcmNlbnQpOwoKICAgIG91dHB1dEVsZW1lbnQuYXBwZW5kQ2hpbGQobGkpOwoKICAgIGNvbnN0IGZpbGVEYXRhUHJvbWlzZSA9IG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7CiAgICAgIGNvbnN0IHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCk7CiAgICAgIHJlYWRlci5vbmxvYWQgPSAoZSkgPT4gewogICAgICAgIHJlc29sdmUoZS50YXJnZXQucmVzdWx0KTsKICAgICAgfTsKICAgICAgcmVhZGVyLnJlYWRBc0FycmF5QnVmZmVyKGZpbGUpOwogICAgfSk7CiAgICAvLyBXYWl0IGZvciB0aGUgZGF0YSB0byBiZSByZWFkeS4KICAgIGxldCBmaWxlRGF0YSA9IHlpZWxkIHsKICAgICAgcHJvbWlzZTogZmlsZURhdGFQcm9taXNlLAogICAgICByZXNwb25zZTogewogICAgICAgIGFjdGlvbjogJ2NvbnRpbnVlJywKICAgICAgfQogICAgfTsKCiAgICAvLyBVc2UgYSBjaHVua2VkIHNlbmRpbmcgdG8gYXZvaWQgbWVzc2FnZSBzaXplIGxpbWl0cy4gU2VlIGIvNjIxMTU2NjAuCiAgICBsZXQgcG9zaXRpb24gPSAwOwogICAgZG8gewogICAgICBjb25zdCBsZW5ndGggPSBNYXRoLm1pbihmaWxlRGF0YS5ieXRlTGVuZ3RoIC0gcG9zaXRpb24sIE1BWF9QQVlMT0FEX1NJWkUpOwogICAgICBjb25zdCBjaHVuayA9IG5ldyBVaW50OEFycmF5KGZpbGVEYXRhLCBwb3NpdGlvbiwgbGVuZ3RoKTsKICAgICAgcG9zaXRpb24gKz0gbGVuZ3RoOwoKICAgICAgY29uc3QgYmFzZTY0ID0gYnRvYShTdHJpbmcuZnJvbUNoYXJDb2RlLmFwcGx5KG51bGwsIGNodW5rKSk7CiAgICAgIHlpZWxkIHsKICAgICAgICByZXNwb25zZTogewogICAgICAgICAgYWN0aW9uOiAnYXBwZW5kJywKICAgICAgICAgIGZpbGU6IGZpbGUubmFtZSwKICAgICAgICAgIGRhdGE6IGJhc2U2NCwKICAgICAgICB9LAogICAgICB9OwoKICAgICAgbGV0IHBlcmNlbnREb25lID0gZmlsZURhdGEuYnl0ZUxlbmd0aCA9PT0gMCA/CiAgICAgICAgICAxMDAgOgogICAgICAgICAgTWF0aC5yb3VuZCgocG9zaXRpb24gLyBmaWxlRGF0YS5ieXRlTGVuZ3RoKSAqIDEwMCk7CiAgICAgIHBlcmNlbnQudGV4dENvbnRlbnQgPSBgJHtwZXJjZW50RG9uZX0lIGRvbmVgOwoKICAgIH0gd2hpbGUgKHBvc2l0aW9uIDwgZmlsZURhdGEuYnl0ZUxlbmd0aCk7CiAgfQoKICAvLyBBbGwgZG9uZS4KICB5aWVsZCB7CiAgICByZXNwb25zZTogewogICAgICBhY3Rpb246ICdjb21wbGV0ZScsCiAgICB9CiAgfTsKfQoKc2NvcGUuZ29vZ2xlID0gc2NvcGUuZ29vZ2xlIHx8IHt9OwpzY29wZS5nb29nbGUuY29sYWIgPSBzY29wZS5nb29nbGUuY29sYWIgfHwge307CnNjb3BlLmdvb2dsZS5jb2xhYi5fZmlsZXMgPSB7CiAgX3VwbG9hZEZpbGVzLAogIF91cGxvYWRGaWxlc0NvbnRpbnVlLAp9Owp9KShzZWxmKTsK","ok":true,"headers":[["content-type","application/javascript"]],"status":200,"status_text":""}},"base_uri":"https://localhost:8080/","height":470},"executionInfo":{"status":"ok","timestamp":1627372078782,"user_tz":-420,"elapsed":10292,"user":{"displayName":"Vân Trần Thảo","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgC02mFRcciy_nHPrkLg2bQYNVPMivJ7vt68iWV=s64","userId":"05921205066487747524"}},"outputId":"628e33d1-cb06-4f07-ec07-3bca31725e00"},"source":["# Đề 30 câu 1\n","from google.colab import files\n","upload = files.upload()\n","\n","import matplotlib.pyplot as plt\n","import pandas as pd\n","import numpy as np\n","import statistics\n","# a b\n","a = pd.read_csv('tuyensinh.csv')\n","print(a)\n","# c ve\n","yyy = [1,2,3,4,5]\n","a_Nam = a['Nam'].values\n","x = np.arange(5)\n","a_CNTT = a['CNTT'].values\n","a_HTTT = a['HTTT'].values\n","a_CNPM = a['CNPM'].values\n","width=0.2\n","plt.bar(x-0.2,a_CNTT,width,color='cyan')\n","plt.bar(x,a_HTTT,width,color='orange')\n","plt.bar(x+0.2,a_CNPM,width,color='green')\n","plt.xticks(x,yyy)\n","plt.xlabel(\"Nam\")\n","plt.ylabel(\"Nganh\")\n","plt.legend([\"CNTT\", \"HTTT\", \"CNPM\"])\n","plt.show()\n","#d\n","D = {}\n","a_drop_Nam = a.drop('Nam',axis=1)\n","a_name_column = a_drop_Nam.columns.values\n","LMean = []\n","for i in a_name_column:\n","  x = statistics.mean(a_drop_Nam[i])\n","  LMean.append(x)\n","zip_iterator = zip(a_name_column,LMean)\n","D = dict(zip_iterator)\n","print(D)\n","# e\n","listSV = []\n","for i in a_name_column:\n","  listSV.append(sum(a_drop_Nam[i]))\n","print('List luu tong so sinh vien tu 2014-2018 tung nganh: ',listSV)\n"],"execution_count":2,"outputs":[{"output_type":"display_data","data":{"text/html":["\n","     <input type=\"file\" id=\"files-61da0a90-f2f1-4b1e-b66b-3859fddd1d0c\" name=\"files[]\" multiple disabled\n","        style=\"border:none\" />\n","     <output id=\"result-61da0a90-f2f1-4b1e-b66b-3859fddd1d0c\">\n","      Upload widget is only available when the cell has been executed in the\n","      current browser session. Please rerun this cell to enable.\n","      </output>\n","      <script src=\"/nbextensions/google.colab/files.js\"></script> "],"text/plain":["<IPython.core.display.HTML object>"]},"metadata":{"tags":[]}},{"output_type":"stream","text":["Saving tuyensinh.csv to tuyensinh.csv\n","    Nam  CNTT  HTTT  CNPM\n","0  2014   345   134   165\n","1  2015   423   176   156\n","2  2016   421   180   176\n","3  2017   520   210   190\n","4  2018   510   216   220\n"],"name":"stdout"},{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}},{"output_type":"stream","text":["{'CNTT': 443.8, 'HTTT': 183.2, 'CNPM': 181.4}\n","List luu tong so sinh vien tu 2014-2018 tung nganh:  [2219, 916, 907]\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"il_Ckk3nbl7Q"},"source":["# Đề 30 câu 2\n","import numpy as np\n","from sklearn import linear_model\n","import matplotlib.pyplot as plt\n","import pandas as pd\n","import io\n","#a\n","a = pd.read_csv('winequality-red-fix.csv',sep=';')\n","print(a)\n","#b\n","df = a.drop('quality',axis=1)\n","dfNor = df.apply(lambda a: (a-np.min(a))/(np.max(a)-np.min(a)))\n","print(dfNor)\n","# c citric acid vs quality\n","x = a.loc[:,['citric acid']].values\n","y = a.loc[:,['quality']].values\n","clf = linear_model.LinearRegression()\n","clf.fit(x,y)\n","print(\"he so hoi quy\", clf.coef_)\n","print(\"sai so hoi quy\", clf.intercept_)\n","print(\"sai so mo hinh\", clf.score(x,y))\n","print(f\"Phương trình hồi quy: [quality]={clf.coef_}*[citric acid]+{clf.intercept_}\")\n","plt.plot(x, clf.predict(x))\n","plt.scatter(x,y,c='r') # show diem\n","plt.title(\"BIỂU ĐỒ TƯƠNG QUAN GIỮA CITRIC ACID VỚI QUALITY\")\n","plt.xlabel(\"Citric acid\")\n","plt.ylabel(\"Quality\")\n","plt.show()\n","#test\n","while True:\n","  x1 = float(input(\"citric acid]: \"))\n","  if x1 < 0:\n","    break\n","  print('quality: ', x1, \":\", clf.predict([[x1]]))\n","# d ...vs quality\n","x2 = dfNor\n","y2 = a['quality'].values\n","clf2 = linear_model.LinearRegression()\n","clf2.fit(x2,y2)\n","dt = {\n","    \"Name\" : x2,\n","    \"He so hoi quy\" : clf2.coef_\n","}\n","print(pd.DataFrame(dt).sort_values(by=\"He so hoi quy\") )\n","print(\"sai so hoi quy\", clf2.intercept_)\n","print(\"sai so mo hinh\", clf2.score(x2,y2))\n","# e Vẽ biểu đồ so sánh giữa các thuộc tính đã chuẩn hóa ???\n","for column in dfNor.drop('alcohol', axis=1):\n","    plt.plot(df['alcohol'], dfNor[column], marker='', linewidth=1, alpha=0.9, label=column)\n","plt.legend(loc=2, ncol=2)\n","plt.title(\"BIỂU ĐỒ SO SÁNH\", loc='left', fontsize=12, fontweight=0, color='orange')\n","plt.xlabel(\"alcohol\")\n","plt.ylabel(\"Index\")\n","plt.show()\n"],"execution_count":null,"outputs":[]}]}